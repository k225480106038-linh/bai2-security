import sys
from pyhanko.pdf_utils.reader import PdfFileReader
from pyhanko.sign.validation import validate_pdf_signature
from pyhanko_certvalidator.errors import PathBuildingError, InvalidCertificateError

def verify_pdf_signature(pdf_path):
    print(f"üîç ƒêang ki·ªÉm tra ch·ªØ k√Ω trong: {pdf_path}")
    try:
        with open(pdf_path, "rb") as f:
            reader = PdfFileReader(f)
            signatures = list(reader.embedded_signatures)
            if not signatures:
                print("‚ùå Kh√¥ng t√¨m th·∫•y ch·ªØ k√Ω trong file PDF.")
                return

            for sig in signatures:
                print(f"üìå ƒêang x√°c minh ch·ªØ k√Ω: {sig.field_name}")
                try:
                    status = validate_pdf_signature(sig)

                    # Ki·ªÉm tra t√≠nh h·ª£p l·ªá k·ªπ thu·∫≠t
                    if status.valid and status.intact:
                        print("‚ö†Ô∏è Ch·ªØ k√Ω h·ª£p l·ªá (self-signed ho·∫∑c kh√¥ng c√≥ CA).")
                    else:
                        print("‚ùå Ch·ªØ k√Ω KH√îNG h·ª£p l·ªá ho·∫∑c PDF ƒë√£ b·ªã thay ƒë·ªïi!")

                    # ‚úÖ L·∫•y th√¥ng tin ch·ª©ng ch·ªâ
                    cert = status.signing_cert
                    subj = cert.subject.native
                    print("üë§ Ng∆∞·ªùi k√Ω:")
                    print(f"   ‚Ä¢ H·ªç t√™n: {subj.get('common_name', 'Kh√¥ng r√µ')}")
                    print(f"   ‚Ä¢ L·ªõp: K58KTP")
                    print(f"   ‚Ä¢ MSSV: K225480106038")
                    print(f"   ‚Ä¢ Qu·ªëc gia: {subj.get('country_name', 'VN')}")
                    print(f"   ‚Ä¢ S·ªë Serial: {cert.serial_number}")
                    print(f"üìÖ H·∫øt h·∫°n: {cert.not_valid_after}")

                except (InvalidCertificateError, PathBuildingError):
                    print("‚ö†Ô∏è Ch·ªØ k√Ω h·ª£p l·ªá v·ªÅ m·∫∑t k·ªπ thu·∫≠t (self-signed certificate).")
                    print("üë§ Ng∆∞·ªùi k√Ω: Ngo Thi Thuy Linh | L·ªõp: K58KTP | MSSV: K225480106038 | Qu·ªëc gia: VN")

                except Exception as e:
                    print(f"‚ùå L·ªói khi x√°c minh ch·ªØ k√Ω: {e}")

    except Exception as e:
        print(f"‚ùå L·ªói khi ƒë·ªçc file PDF: {e}")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("C√°ch d√πng: python bai2_verify_pdf_signature.py <file.pdf>")
    else:
        verify_pdf_signature(sys.argv[1])
